{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/niks/Desktop/Practice/next/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyApp, _React$Component);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var Component = this.props.Component;\n      console.log(\"ComponentComponent\", this.props);\n      return __jsx(Component, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyApp;\n}(React.Component); // MyApp.getInitialProps = async({ query }) => {\n//     let diseaseCat = {};\n//     const res = await fetch(DISEASE_LIST_API);\n//     const json = await res.json();\n//     json.results.forEach(function(disease){\n//         if(diseaseCat[disease.disease_type]){\n//             diseaseCat[disease.disease_type].push(disease);\n//         }else{\n//             diseaseCat[disease.disease_type] = [disease]\n//         }\n//     });\n//     return {\n//         diseases: json.results,\n//         diseaseCat: diseaseCat\n//     }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/home/niks/Desktop/Practice/next/pages/_app.js"],"names":["React","DISEASE_LIST_API","fetch","MyApp","Component","props","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,K;;;;;;;;;;;;;6BAGO;AAAA,UACEC,SADF,GACc,KAAKC,KADnB,CACED,SADF;AAELE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKF,KAAtC;AACA,aACI,MAAC,SAAD,eAAe,KAAKA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;;;EATeL,KAAK,CAACI,S,GAW1B;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,KAAf","sourcesContent":["import React from 'react';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\n\nclass MyApp extends React.Component{\n\n\n    render() {\n        const {Component} =this.props;\n        console.log(\"ComponentComponent\",this.props)\n        return (\n            <Component {...this.props}/>\n        );\n    }\n}\n// MyApp.getInitialProps = async({ query }) => {\n//     let diseaseCat = {};\n//     const res = await fetch(DISEASE_LIST_API);\n\n//     const json = await res.json();\n\n//     json.results.forEach(function(disease){\n//         if(diseaseCat[disease.disease_type]){\n//             diseaseCat[disease.disease_type].push(disease);\n//         }else{\n//             diseaseCat[disease.disease_type] = [disease]\n//         }\n//     });\n\n//     return {\n//         diseases: json.results,\n//         diseaseCat: diseaseCat\n//     }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}