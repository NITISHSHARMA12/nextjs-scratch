{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/niks/Desktop/Practice/next/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, this.props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}\n\nMyApp.getInitialProps = function _callee(_ref2) {\n  var query, diseaseCat, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          diseaseCat = {};\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(DISEASE_LIST_API));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          json = _context.sent;\n          json.results.forEach(function (disease) {\n            if (diseaseCat[disease.disease_type]) {\n              diseaseCat[disease.disease_type].push(disease);\n            } else {\n              diseaseCat[disease.disease_type] = [disease];\n            }\n          });\n          return _context.abrupt(\"return\", {\n            diseases: json.results,\n            diseaseCat: diseaseCat\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/niks/Desktop/Practice/next/pages/_app.js"],"names":["React","DISEASE_LIST_API","fetch","MyApp","Component","pageProps","props","getInitialProps","query","diseaseCat","res","json","results","forEach","disease","disease_type","push","diseases"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC,SACS,MAAC,SAAD,eAAeA,SAAf,EAA8B,KAAKC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADT;AAGH;;AAEDH,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,KAAR,SAAQA,KAAR;AAChBC,UAAAA,UADgB,GACH,EADG;AAAA;AAAA,2CAEFP,KAAK,CAACD,gBAAD,CAFH;;AAAA;AAEdS,UAAAA,GAFc;AAAA;AAAA,2CAIDA,GAAG,CAACC,IAAJ,EAJC;;AAAA;AAIdA,UAAAA,IAJc;AAMpBA,UAAAA,IAAI,CAACC,OAAL,CAAaC,OAAb,CAAqB,UAASC,OAAT,EAAiB;AAClC,gBAAGL,UAAU,CAACK,OAAO,CAACC,YAAT,CAAb,EAAoC;AAChCN,cAAAA,UAAU,CAACK,OAAO,CAACC,YAAT,CAAV,CAAiCC,IAAjC,CAAsCF,OAAtC;AACH,aAFD,MAEK;AACDL,cAAAA,UAAU,CAACK,OAAO,CAACC,YAAT,CAAV,GAAmC,CAACD,OAAD,CAAnC;AACH;AACJ,WAND;AANoB,2CAcb;AACHG,YAAAA,QAAQ,EAAEN,IAAI,CAACC,OADZ;AAEHH,YAAAA,UAAU,EAAEA;AAFT,WAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAoBA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\n\nfunction MyApp({ Component, pageProps }) {\n    return (\n             <Component {...pageProps} {...this.props}/>\n        )\n}\n\nMyApp.getInitialProps = async({ query }) => {\n    let diseaseCat = {};\n    const res = await fetch(DISEASE_LIST_API);\n\n    const json = await res.json();\n\n    json.results.forEach(function(disease){\n        if(diseaseCat[disease.disease_type]){\n            diseaseCat[disease.disease_type].push(disease);\n        }else{\n            diseaseCat[disease.disease_type] = [disease]\n        }\n    });\n\n    return { \n        diseases: json.results,\n        diseaseCat: diseaseCat\n    }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}