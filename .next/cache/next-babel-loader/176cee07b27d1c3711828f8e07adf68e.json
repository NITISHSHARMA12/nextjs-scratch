{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/niks/Desktop/Practice/next/Components/Layout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from './Header';\nimport Footer from './Footer';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      diseases\n    } = this.state;\n    console.log(\"hi\", this.props);\n    return __jsx(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(Header, _extends({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), this.props.children, __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLayout.getInitialProps = async ({\n  query\n}) => {\n  let diseaseCat = {};\n  const res = await fetch(DISEASE_LIST_API);\n  const json = await res.json();\n  json.results.forEach(function (disease) {\n    if (diseaseCat[disease.disease_type]) {\n      diseaseCat[disease.disease_type].push(disease);\n    } else {\n      diseaseCat[disease.disease_type] = [disease];\n    }\n  });\n  return {\n    diseases: json.results,\n    diseaseCat: diseaseCat\n  };\n};\n\nexport default Layout;","map":{"version":3,"sources":["/home/niks/Desktop/Practice/next/Components/Layout.js"],"names":["Header","Footer","DISEASE_LIST_API","fetch","Layout","React","Component","constructor","props","state","render","diseases","console","log","children","getInitialProps","query","diseaseCat","res","json","results","forEach","disease","disease_type","push"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,EAAZ;AAGH;;AAKDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKF,KAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKL,KAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD,eAAY,KAAKA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAES,KAAKA,KAAL,CAAWM,QAFpB,EAGI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AArB+B;;AAyBpCV,MAAM,CAACW,eAAP,GAAyB,OAAM;AAAEC,EAAAA;AAAF,CAAN,KAAoB;AACzC,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAACD,gBAAD,CAAvB;AAEA,QAAMiB,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEAA,EAAAA,IAAI,CAACC,OAAL,CAAaC,OAAb,CAAqB,UAASC,OAAT,EAAiB;AAClC,QAAGL,UAAU,CAACK,OAAO,CAACC,YAAT,CAAb,EAAoC;AAChCN,MAAAA,UAAU,CAACK,OAAO,CAACC,YAAT,CAAV,CAAiCC,IAAjC,CAAsCF,OAAtC;AACH,KAFD,MAEK;AACDL,MAAAA,UAAU,CAACK,OAAO,CAACC,YAAT,CAAV,GAAmC,CAACD,OAAD,CAAnC;AACH;AACJ,GAND;AAQA,SAAO;AACHX,IAAAA,QAAQ,EAAEQ,IAAI,CAACC,OADZ;AAEHH,IAAAA,UAAU,EAAEA;AAFT,GAAP;AAIH,CAlBD;;AAmBA,eAAeb,MAAf","sourcesContent":["import Header from './Header';\nimport Footer from './Footer';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\nimport fetch from \"isomorphic-unfetch\";\nclass Layout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n           \n        }\n    }\n\n  \n\n\n    render() {\n        const {diseases} =this.state;\n        console.log(\"hi\", this.props)\n        return (\n            <section>\n                <Header {...this.props}/>\n                    {this.props.children}\n                <Footer/>\n            </section>\n        );\n    }\n}\n\n\nLayout.getInitialProps = async({ query }) => {\n    let diseaseCat = {};\n    const res = await fetch(DISEASE_LIST_API);\n\n    const json = await res.json();\n\n    json.results.forEach(function(disease){\n        if(diseaseCat[disease.disease_type]){\n            diseaseCat[disease.disease_type].push(disease);\n        }else{\n            diseaseCat[disease.disease_type] = [disease]\n        }\n    });\n\n    return { \n        diseases: json.results,\n        diseaseCat: diseaseCat\n    }\n}\nexport default Layout;"]},"metadata":{},"sourceType":"module"}