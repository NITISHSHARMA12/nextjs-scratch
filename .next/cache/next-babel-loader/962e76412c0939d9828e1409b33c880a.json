{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/niks/Desktop/Practice/next/Components/Layout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from './Header';\nimport Footer from './Footer';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {// diseases:[],\n      // diseaseCat:{}\n    };\n  } // componentDidMount(){\n  //     this.loadDisease();\n  // }\n  // loadDisease =async()=>{\n  //     let diseaseCat = {};\n  //     await fetch(DISEASE_LIST_API)\n  //     .then(response => response.json())\n  //     .then((data) =>{\n  //         data.results.forEach(function(disease){\n  //             if(diseaseCat[disease.disease_type]){\n  //                 diseaseCat[disease.disease_type].push(disease);\n  //             }else{\n  //                 diseaseCat[disease.disease_type] = [disease]\n  //             }\n  //         });\n  //         this.setState({\n  //             diseases: data.results,\n  //             diseaseCat: diseaseCat\n  //         })\n  //        }\n  //     )\n  // }\n\n\n  render() {\n    const {\n      diseases\n    } = this.state;\n    console.log(\"hi\", this.state);\n    return __jsx(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Header, _extends({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), this.props.children, __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLayout.getInitialProps = async ({\n  query\n}) => {\n  let diseaseCat = {};\n  const res = await fetch(DISEASE_LIST_API);\n  const json = await res.json();\n  json.results.forEach(function (disease) {\n    if (diseaseCat[disease.disease_type]) {\n      diseaseCat[disease.disease_type].push(disease);\n    } else {\n      diseaseCat[disease.disease_type] = [disease];\n    }\n  });\n  return {\n    diseases: json.results,\n    diseaseCat: diseaseCat\n  };\n};\n\nexport default Layout;","map":{"version":3,"sources":["/home/niks/Desktop/Practice/next/Components/Layout.js"],"names":["Header","Footer","DISEASE_LIST_API","Layout","React","Component","constructor","props","state","render","diseases","console","log","children","getInitialProps","query","diseaseCat","res","fetch","json","results","forEach","disease","disease_type","push"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,CACR;AACA;AAFQ,KAAZ;AAIH,GAP+B,CAShC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKF,KAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKJ,KAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD,eAAY,KAAKA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAES,KAAKD,KAAL,CAAWM,QAFpB,EAGI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA/C+B;;AAmDpCV,MAAM,CAACW,eAAP,GAAyB,OAAM;AAAEC,EAAAA;AAAF,CAAN,KAAoB;AACzC,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAChB,gBAAD,CAAvB;AAEA,QAAMiB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEAA,EAAAA,IAAI,CAACC,OAAL,CAAaC,OAAb,CAAqB,UAASC,OAAT,EAAiB;AAClC,QAAGN,UAAU,CAACM,OAAO,CAACC,YAAT,CAAb,EAAoC;AAChCP,MAAAA,UAAU,CAACM,OAAO,CAACC,YAAT,CAAV,CAAiCC,IAAjC,CAAsCF,OAAtC;AACH,KAFD,MAEK;AACDN,MAAAA,UAAU,CAACM,OAAO,CAACC,YAAT,CAAV,GAAmC,CAACD,OAAD,CAAnC;AACH;AACJ,GAND;AAQA,SAAO;AACHZ,IAAAA,QAAQ,EAAES,IAAI,CAACC,OADZ;AAEHJ,IAAAA,UAAU,EAAEA;AAFT,GAAP;AAIH,CAlBD;;AAmBA,eAAeb,MAAf","sourcesContent":["import Header from './Header';\nimport Footer from './Footer';\nimport { DISEASE_LIST_API } from '../constant/apiUrl';\n\nclass Layout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            // diseases:[],\n            // diseaseCat:{}\n        }\n    }\n\n    // componentDidMount(){\n    //     this.loadDisease();\n    // }\n\n\n    // loadDisease =async()=>{\n    //     let diseaseCat = {};\n    //     await fetch(DISEASE_LIST_API)\n    //     .then(response => response.json())\n    //     .then((data) =>{\n    //         data.results.forEach(function(disease){\n    //             if(diseaseCat[disease.disease_type]){\n    //                 diseaseCat[disease.disease_type].push(disease);\n    //             }else{\n    //                 diseaseCat[disease.disease_type] = [disease]\n    //             }\n    //         });\n    //         this.setState({\n    //             diseases: data.results,\n    //             diseaseCat: diseaseCat\n    //         })\n            \n    //        }\n            \n    //     )\n    // }\n\n\n    render() {\n        const {diseases} =this.state;\n        console.log(\"hi\", this.state)\n        return (\n            <section>\n                <Header {...this.state}/>\n                    {this.props.children}\n                <Footer/>\n            </section>\n        );\n    }\n}\n\n\nLayout.getInitialProps = async({ query }) => {\n    let diseaseCat = {};\n    const res = await fetch(DISEASE_LIST_API);\n\n    const json = await res.json();\n\n    json.results.forEach(function(disease){\n        if(diseaseCat[disease.disease_type]){\n            diseaseCat[disease.disease_type].push(disease);\n        }else{\n            diseaseCat[disease.disease_type] = [disease]\n        }\n    });\n\n    return { \n        diseases: json.results,\n        diseaseCat: diseaseCat\n    }\n}\nexport default Layout;"]},"metadata":{},"sourceType":"module"}